// keyword TOKEN_ENUM
// C and extensions (subset) â€” extend as needed
auto TOKEN_KW_auto
break TOKEN_KW_break
case TOKEN_KW_case
char TOKEN_KW_char
const TOKEN_KW_const
continue TOKEN_KW_continue
default TOKEN_KW_default
do TOKEN_KW_do
double TOKEN_KW_double
else TOKEN_KW_else
enum TOKEN_KW_enum
extern TOKEN_KW_extern
float TOKEN_KW_float
for TOKEN_KW_for
goto TOKEN_KW_goto
if TOKEN_KW_if
inline TOKEN_KW_inline
int TOKEN_KW_int
long TOKEN_KW_long
register TOKEN_KW_register
restrict TOKEN_KW_restrict
return TOKEN_KW_return
short TOKEN_KW_short
signed TOKEN_KW_signed
sizeof TOKEN_KW_sizeof
static TOKEN_KW_static
struct TOKEN_KW_struct
switch TOKEN_KW_switch
typedef TOKEN_KW_typedef
union TOKEN_KW_union
unsigned TOKEN_KW_unsigned
void TOKEN_KW_void
volatile TOKEN_KW_volatile
while TOKEN_KW_while
_Alignas TOKEN_KW_Alignas
_Alignof TOKEN_KW_Alignof
_Atomic TOKEN_KW_Atomic
_Bool TOKEN_KW_Bool
_Complex TOKEN_KW_Complex
_Embed TOKEN_KW_Embed
_Generic TOKEN_KW_Generic
_Imaginary TOKEN_KW_Imaginary
_Pragma TOKEN_KW_Pragma
_Noreturn TOKEN_KW_Noreturn
_Static_assert TOKEN_KW_Static_assert
_Thread_local TOKEN_KW_Thread_local
_Typeof TOKEN_KW_Typeof
_Vector TOKEN_KW_Vector
asm TOKEN_KW_asm
__attribute__ TOKEN_KW_attribute
__cdecl TOKEN_KW_cdecl
__stdcall TOKEN_KW_stdcall
__declspec TOKEN_KW_declspec
