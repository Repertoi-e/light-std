// lexeme TOKEN_ENUM
// Single-char
. TOKEN_DOT
, TOKEN_COMMA
+ TOKEN_PLUS
- TOKEN_MINUS
* TOKEN_TIMES
/ TOKEN_SLASH
% TOKEN_PERCENT
= TOKEN_ASSIGN
& TOKEN_AND
^ TOKEN_XOR
| TOKEN_OR
# TOKEN_HASH
@ TOKEN_AT
~ TOKEN_TILDE
! TOKEN_EXCLAMATION
: TOKEN_COLON
; TOKEN_SEMICOLON
< TOKEN_LESS
> TOKEN_GREATER
[ TOKEN_BRACKET_OPEN
] TOKEN_BRACKET_CLOSE
( TOKEN_PAREN_OPEN
) TOKEN_PAREN_CLOSE
{ TOKEN_BRACE_OPEN
} TOKEN_BRACE_CLOSE

// Two-char
-> TOKEN_ARROW
## TOKEN_DOUBLE_HASH
&& TOKEN_DOUBLE_AND
|| TOKEN_DOUBLE_OR
+= TOKEN_PLUS_EQUAL
-= TOKEN_MINUS_EQUAL
*= TOKEN_TIMES_EQUAL
/= TOKEN_SLASH_EQUAL
%= TOKEN_PERCENT_EQUAL
|= TOKEN_OR_EQUAL
&= TOKEN_AND_EQUAL
^= TOKEN_XOR_EQUAL
!= TOKEN_NOT_EQUAL
== TOKEN_EQUALITY
>= TOKEN_GREATER_EQUAL
<= TOKEN_LESS_EQUAL
<< TOKEN_LEFT_SHIFT
>> TOKEN_RIGHT_SHIFT
++ TOKEN_INCREMENT
-- TOKEN_DECREMENT

// Three-char
<<= TOKEN_LEFT_SHIFT_EQUAL
>>= TOKEN_RIGHT_SHIFT_EQUAL
... TOKEN_TRIPLE_DOT
